
<header class="header fixed top-0 left-0 w-full bg-white z-50 shadow-md">
  <div class="container flex justify-between items-center py-4 mx-auto px-[30px]">
    <div class="logo text-xl font-bold">
      <a href="#">
        <img src="/assets/Logo.png" alt="Logo" class="h-[60px]">
      </a>
    </div>
    <nav class="gap-4 text-[#666] lg:flex hidden">
      <a href="#hero" class="nav-link relative" onclick="setActiveLink('hero')">
      Beranda
      <span class="absolute left-0 bottom-0 w-0 h-[2px] bg-gradient-to-r from-blue-500 to-purple-500 transition-all duration-300"></span>
      </a>
      <a href="#shop" class="nav-link relative" onclick="setActiveLink('shop')">
      Belanja
      <span class="absolute left-0 bottom-0 w-0 h-[2px] bg-gradient-to-r from-blue-500 to-purple-500 transition-all duration-300"></span>
      </a>
      <a href="#promo" class="nav-link relative" onclick="setActiveLink('promo')">
      Promo
      <span class="absolute left-0 bottom-0 w-0 h-[2px] bg-gradient-to-r from-blue-500 to-purple-500 transition-all duration-300"></span>
      </a>
      <a href="#article" class="nav-link relative" onclick="setActiveLink('article')">
      Article
      <span class="absolute left-0 bottom-0 w-0 h-[2px] bg-gradient-to-r from-blue-500 to-purple-500 transition-all duration-300"></span>
      </a>
    </nav>
    <button id="burger-menu" class="text-[#666] focus:outline-none lg:hidden visible">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7" />
      </svg>
    </button>


    

  </div>

  <div class="relative lg:hidden block w-full">
    <div id="dropdown-menu" class="relative right-0 mt-2 bg-white rounded-md hidden w-full">
      <a href="#hero" class="block px-4 py-2 text-sm text-[#666] hover:bg-gray-100" onclick="setActiveLink('hero')">Beranda</a>
      <a href="#shop" class="block px-4 py-2 text-sm text-[#666] hover:bg-gray-100" onclick="setActiveLink('shop')">Belanja</a>
      <a href="#promo" class="block px-4 py-2 text-sm text-[#666] hover:bg-gray-100" onclick="setActiveLink('promo')">Promo</a>
      <a href="#article" class="block px-4 py-2 text-sm text-[#666] hover:bg-gray-100" onclick="setActiveLink('article')">Article</a>
    </div>
  </div>
</header>

<style>
  .nav-link:hover span,
  .nav-link.active span {
  width: 100%;
  }
  .nav-link.active {
    color:#000;
  }
</style>

<script>
  // Smooth scrolling for navigation links
  document.addEventListener('DOMContentLoaded', () => {
  const navLinks = document.querySelectorAll('.nav-link');
  navLinks.forEach(link => {
    link.addEventListener('click', (e) => {
      e.preventDefault();
      const href = link.getAttribute('href');
      const targetId = href ? href.substring(1) : null;
      const targetElement = targetId ? document.getElementById(targetId) : null;
      if (targetElement) {
        const headerElement = document.querySelector('.header');
        const headerOffset = headerElement ? (headerElement as HTMLElement).offsetHeight : 0;
        const elementPosition = targetElement.getBoundingClientRect().top + window.pageYOffset;
        let offsetPosition = elementPosition - headerOffset;

        // Ensure offsetPosition is not negative
        offsetPosition = Math.max(offsetPosition, 0);

        window.scrollTo({
          top: offsetPosition,
          behavior: 'smooth'
        });
      }
    });
  });
});


document.addEventListener('DOMContentLoaded', () => {
        const burgerMenu = document.getElementById('burger-menu');
        const dropdownMenu = document.getElementById('dropdown-menu');

        burgerMenu?.addEventListener('click', () => {
          if (dropdownMenu) {
            dropdownMenu.classList.toggle('hidden');
          }
        });

        document.addEventListener('click', (e) => {
          if (!burgerMenu?.contains(e.target as Node) && !dropdownMenu?.contains(e.target as Node)) {
            dropdownMenu?.classList.add('hidden');
          }
        });
      });
      
          declare global {
            interface Window {
              setActiveLink: (id: string) => void;
            }
          }
    
          let activeLink = '';
          window.setActiveLink = (id: string) => {
        activeLink = id;
        updateNavLinks();
      };

      const setActiveLink = (id: string) => {
      activeLink = id;
      updateNavLinks();
      };

      const updateNavLinks = () => {
      const navLinks = document.querySelectorAll('.nav-link');
      navLinks.forEach(link => {
        const href = link.getAttribute('href');
        const targetId = href ? href.substring(1) : null;
        if (targetId === activeLink) {
        link.classList.add('active');
        } else {
        link.classList.remove('active');
        }
      });
      };

      document.addEventListener('scroll', () => {
      const sections = document.querySelectorAll('section[id]');
      let currentSection = '';
      sections.forEach(section => {
        const sectionTop = (section as HTMLElement).offsetTop - 100; // Adjust offset for header
        const sectionHeight = (section as HTMLElement).offsetHeight;
        if (window.scrollY >= sectionTop && window.scrollY < sectionTop + sectionHeight) {
        currentSection = section.getAttribute('id') || '';
        }
      });
      if (currentSection) {
        setActiveLink(currentSection);
      }
      });
</script>